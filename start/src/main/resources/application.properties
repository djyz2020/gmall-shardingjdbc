# 应用名称
spring.application.name=gmall-shardingjdbc

# 应用服务 WEB 访问端口
server.port=8080

# THYMELEAF (ThymeleafAutoConfiguration)
# 开启模板缓存（默认值： true ）
spring.thymeleaf.cache=true
# 检查模板是否存在，然后再呈现
spring.thymeleaf.check-template=true
# 检查模板位置是否正确（默认值 :true ）
spring.thymeleaf.check-template-location=true
#Content-Type 的值（默认值： text/html ）
spring.thymeleaf.content-type=text/html
# 开启 MVC Thymeleaf 视图解析（默认值： true ）
spring.thymeleaf.enabled=true
# 模板编码
spring.thymeleaf.encoding=UTF-8
# 要被排除在解析之外的视图名称列表，⽤逗号分隔
spring.thymeleaf.excluded-view-names=
# 要运⽤于模板之上的模板模式。另⻅ StandardTemplate-ModeHandlers( 默认值： HTML5)
spring.thymeleaf.mode=HTML5
# 在构建 URL 时添加到视图名称前的前缀（默认值： classpath:/templates/ ）
spring.thymeleaf.prefix=classpath:/templates/
# 在构建 URL 时添加到视图名称后的后缀（默认值： .html ）
spring.thymeleaf.suffix=.html


#************H2  Begin****************
##创建表的MySql语句位置
#spring.datasource.schema=classpath:schema.sql
##插入数据的MySql语句的位置
#spring.datasource.data=classpath:data.sql
#
##remote visit
#spring.h2.console.settings.web-allow-others=true
##console url, Spring启动后，可以访问 http://127.0.0.1:8080/h2-console 查看数据库
#spring.h2.console.path=/h2-console
#spring.h2.console.enabled=true
#spring.h2.console.settings.trace=true
#
##指定数据库的种类，这里 file意思是文件型数据库
#spring.datasource.url=jdbc:h2:file:~/test
##用户名密码不需要改，都是临时值
#spring.datasource.username=sa
#spring.datasource.password=123456
##指定Driver，有了Driver才能访问数据库
#spring.datasource.driver-class-name=org.h2.Driver
#************H2  End****************

#下面这些内容是为了让MyBatis映射
#指定Mybatis的Mapper文件
mybatis.mapper-locations=classpath:mappers/*xml
#指定Mybatis的实体目录
mybatis.type-aliases-package=com.fwd.gmallshardingjdbc.mybatis.entity

spring.mvc.encoding.enabled=true
spring.mvc.encoding.charset=UTF‐8
spring.mvc.encoding.force=true
spring.mvc.converters.preferred-json-mapper=gson
spring.main.allow‐bean‐definition‐overriding = true
mybatis.configuration.map‐underscore‐to‐camel‐case = true

# 打开sql输出日志
logging.level.root=info
logging.level.org.springframework.web=info
spring.shardingsphere.props.sql.show=true

# 分表配置
#---------------------------------------------------------------------------------------------------------------------
# 主库配置
spring.shardingsphere.datasource.names=master1,slave1,slave2,master2,slave3,slave4

spring.shardingsphere.datasource.master1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master1.url=jdbc:mysql://192.168.126.135:3310/order_db?useUnicode=true&characterEncoding=utf8&useSSL=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.master1.username=root
spring.shardingsphere.datasource.master1.password=123456

spring.shardingsphere.datasource.master2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master2.url=jdbc:mysql://192.168.126.135:3308/order_db?useUnicode=true&characterEncoding=utf8&useSSL=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.master2.username=root
spring.shardingsphere.datasource.master2.password=123456

# 从库配置
spring.shardingsphere.datasource.slave1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.slave1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave1.url=jdbc:mysql://192.168.126.135:3309/order_db?useUnicode=true&characterEncoding=utf8&useSSL=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.slave1.username=root
spring.shardingsphere.datasource.slave1.password=123456
# 从库配置
spring.shardingsphere.datasource.slave2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.slave2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave2.url=jdbc:mysql://192.168.126.135:3311/order_db?useUnicode=true&characterEncoding=utf8&useSSL=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.slave2.username=root
spring.shardingsphere.datasource.slave2.password=123456
# 从库配置
spring.shardingsphere.datasource.slave3.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.slave3.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave3.url=jdbc:mysql://192.168.126.135:3313/order_db?useUnicode=true&characterEncoding=utf8&useSSL=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.slave3.username=root
spring.shardingsphere.datasource.slave3.password=123456
# 从库配置
spring.shardingsphere.datasource.slave4.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.slave4.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave4.url=jdbc:mysql://192.168.126.135:3313/order_db?useUnicode=true&characterEncoding=utf8&useSSL=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.slave4.username=root
spring.shardingsphere.datasource.slave4.password=123456

# master-slave
spring.shardingsphere.sharding.master-slave-rules.master1.master-data-source-name=master1
spring.shardingsphere.sharding.master-slave-rules.master1.slave-data-source-names=slave1,slave2
spring.shardingsphere.sharding.master-slave-rules.master2.master-data-source-name=master2
spring.shardingsphere.sharding.master-slave-rules.master2.slave-data-source-names=slave3,slave4
spring.shardingsphere.masterslave.load-balance-algorithm-type=round_robin

# [真实的数据库表] 指定t_order表的数据分布情况，配置数据节点
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=master$->{1..2}.t_order_$->{1..2}
# [分库策略]
spring.shardingsphere.sharding.tables.b_order.database-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.b_order.database-strategy.inline.algorithm-expression=master$->{order_id % 2 + 1}
# [分表策略] 指定t_order表的分片策略，分片策略包括分片键和分片算法
# 指定t_order表的分片键
spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE
# 指定t_order表的分片算法
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2 + 1}
#---------------------------------------------------------------------------------------------------------------------

